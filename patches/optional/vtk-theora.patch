--- a/ThirdParty/theora/vtktheora/lib/analyze.c
+++ b/ThirdParty/theora/vtktheora/lib/analyze.c
@@ -285,7 +285,7 @@
 static void oc_fr_state_flush_sb(oc_fr_state *_fr){
   ptrdiff_t bits;
   int       sb_partial;
-  int       sb_full=sb_full;
+  int       sb_full=0;
   int       b_coded_count;
   int       b_coded;
   int       b_count;
@@ -323,7 +323,7 @@
   int       b_coded_count;
   int       b_count;
   int       sb_partial;
-  int       sb_full=sb_full;
+  int       sb_full=0;
   bits=_fr->bits;
   /*Extend the b_coded run, or start a new one.*/
   b_coded_count=_fr->b_coded_count;
--- a/ThirdParty/theora/vtktheora/lib/tokenize.c
+++ b/ThirdParty/theora/vtktheora/lib/tokenize.c
@@ -245,11 +245,11 @@
   for(zzi=OC_MINI(_zzi,63);zzi>0;zzi--){
     ogg_int32_t  lambda;
     ogg_uint32_t best_cost;
-    int          best_bits=best_bits;
-    int          best_next=best_next;
-    int          best_token=best_token;
-    int          best_eb=best_eb;
-    int          best_qc=best_qc;
+    int          best_bits=0;
+    int          best_next=0;
+    int          best_token=0;
+    int          best_eb=0;
+    int          best_qc=0;
     int          flush_bits;
     ogg_uint32_t d2;
     int          dq;
@@ -793,8 +793,8 @@
   int                neobs1;
   int                token;
   int                eb;
-  int                token1=token1;
-  int                eb1=eb1;
+  int                token1=0;
+  int                eb1=0;
   /*Return immediately if there are no coded fragments; otherwise we'd flush
      any trailing EOB run into the AC 1 list and never read it back out.*/
   if(_ncoded_fragis<=0)return;
@@ -1033,7 +1033,7 @@
     int       new_eb;
     int       zzj;
     int       plj;
-    ptrdiff_t ti=ti;
+    ptrdiff_t ti=0;
     int       run_count;
     /*Make sure this coefficient has tokens at all.*/
     if(_enc->ndct_tokens[pli][zzi]<=0)continue;
